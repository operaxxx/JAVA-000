GC总结
    由于个人原因，并没有完成所有的测试，但根据课上老师演示，以及之前看过的书籍。有了大概的认识。根据机器的硬件配置，对吞吐量、STW时间有不同要求的项目，可以选择不同回收器。
    在内存较小时（512m以下），Serial GC是个不错的选择
    在内存比较充足的情况，1g以上，Parallel、CMS表现的差不多。具体的细节还不是很清楚。
    再更大内存的情况下4g以上，G1收集器感觉是一个比较平衡的收集器，可以通过设置一个合理的参数来控制STW时间。

    衡量垃圾收集器的三项最重要的指标是：内存占用（Footprint）、吞吐量（Throughput）和延迟（Latency），三者共同构成了一个“不可能三角[插图]”。三者总体的表现会随技术进步而越来越好，但是要在这三个方面同时具有卓越表现的“完美”收集器是极其困难甚至是不可能的，一款优秀的收集器通常最多可以同时达成其中的两项。

    在内存占用、吞吐量和延迟这三项指标里，延迟的重要性日益凸显，越发备受关注。其原因是随着计算机硬件的发展、性能的提升，我们越来越能容忍收集器多占用一点点内存；硬件性能增长，对软件系统的处理能力是有直接助益的，硬件的规格和性能越高，也有助于降低收集器运行时对应用程序的影响，换句话说，吞吐量会更高。但对延迟则不是这样，硬件规格提升，准确地说是内存的扩大，对延迟反而会带来负面的效果。
    （引用自《深入理解Java虚拟机》）

    从老师视频中测试的效果也可以看出来。
    
    所以出现了两款新的GC，Shenandoah与ZGC。但对这两款gc还没有太多的认识。